services:
  db:
    container_name: ${DB_HOST?DB_HOST}
    restart: always
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: ${DB_ROOT_PASSWORD?DB_ROOT_PASSWORD}
      POSTGRES_DB: ${DB_NAME?DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 0.5s
      timeout: 10s
      retries: 60
    volumes:
      - /home/app/db/data:/var/lib/postgresql/data
    networks:
      - db

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL?PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD?PGADMIN_PASSWORD}
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    labels:
      traefik.enable: true
      traefik.http.routers.ct-pga.rule: Host(`pgadmin.coursetable.com`)
      traefik.http.routers.ct-pga.tls: true
      traefik.http.routers.ct-pga.tls.certResolver: ctresolver
    networks:
      - db
      - traefik

  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: ${DB_BOUNCER?DB_BOUNCER}
    restart: always
    environment:
      DATABASE_URL: postgresql://${DB_USER?DB_USER}:${DB_ROOT_PASSWORD?DB_ROOT_PASSWORD}@${DB_HOST?DB_HOST}:${DB_PORT?DB_PORT}/${FERRY_DB_NAME?FERRY_DB_NAME}
      AUTH_TYPE: scram-sha-256
      QUERY_WAIT_TIMEOUT: 600
      MAX_CLIENT_CONN: 5000
    ports:
      - "5432:5432"
    networks:
      - db

networks:
  traefik:
    external: true
  db:
    name: db
    driver: bridge
