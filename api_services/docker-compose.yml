services:
  graphql-engine:
    restart: always
    container_name: ${GRAPHQL_ENGINE_HOST?graphql-engine}
    image: hasura/graphql-engine:latest
    ports:
      - 8085:8080
    environment:
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET?admin_secret}
      HASURA_GRAPHQL_DATABASE_URL: ${FERRY_POSTGRES_URI?ferry_db}
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true' # set to "true" to enable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:8080' ]
      interval: 0.5s
      timeout: 10s
      retries: 60
    labels:
      traefik.enable: true
      traefik.http.routers.ct-gql.rule: Host(`gql.coursetable.com`)
      traefik.http.routers.ct-gql.tls: true
      traefik.http.routers.ct-gql.tls.certResolver: ctresolver
    networks:
      - db
      - traefik
      - api_services

  redis:
    restart: always
    container_name: ${REDIS_HOST?redis}
    image: redis/redis-stack-server:latest
    volumes:
      - /home/app/redis/prod-data:/data
    environment:
      - REDIS_ARGS=--save 60 200 --appendonly yes
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      interval: 0.5s
      timeout: 10s
      retries: 60
    networks:
      - api_services

networks:
  api_services:
    name: api_services
    driver: bridge
  db:
    external: true
  traefik:
    external: true
